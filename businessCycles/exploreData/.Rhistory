geom_line() +
facet_wrap(~sc, ncol = 2)
dev.new()
plot(graphMS)
}
drawMean(fDiffQ, "MarketShare")
drawMean = function(df, varToDraw) {
varD = paste0(varToDraw, ".d")
varBase = paste0(varToDraw, ".y")
graphMS = df %>%
group_by(sc, tick, OLQ, random_seed) %>%
summarise(tmpSum = mean(vars(varD)/vars(varBase), na.rm = TRUE)) %>%
group_by(sc, tick, OLQ) %>%
summarise(OLQ_MS = mean(tmpSum, na.rm = TRUE)) %>%
ggplot(aes(tick, OLQ_MS, color = factor(OLQ))) +
geom_line() +
facet_wrap(~sc, ncol = 2)
dev.new()
plot(graphMS)
}
drawMean(fDiffQ, "MarketShare")
drawMean = function(df, varToDraw) {
varD = paste0(varToDraw, ".d")
varBase = paste0(varToDraw, ".y")
graphMS = df %>%
group_by(sc, tick, OLQ, random_seed) %>%
summarise(tmpSum = mean(!!varD/!!varBase, na.rm = TRUE)) %>%
group_by(sc, tick, OLQ) %>%
summarise(OLQ_MS = mean(tmpSum, na.rm = TRUE)) %>%
ggplot(aes(tick, OLQ_MS, color = factor(OLQ))) +
geom_line() +
facet_wrap(~sc, ncol = 2)
dev.new()
plot(graphMS)
}
drawMean(fDiffQ, "MarketShare")
quo(  group_by(sc, tick, OLQ, random_seed) %>%
summarise(tmpSum = mean(!!varD/!!varBase, na.rm = TRUE)))
varToDraw = "Quantity"
varD = paste0(varToDraw, ".d")
varBase = paste0(varToDraw, ".y")
quo(varD)
varD = quo(varD)
varD
graphMS = df %>%
group_by(sc, tick, OLQ, random_seed) %>%
summarise(tmpSum = mean(!!varD, na.rm = TRUE)) %>%
group_by(sc, tick, OLQ) %>%
summarise(OLQ_MS = mean(tmpSum, na.rm = TRUE)) %>%
ggplot(aes(tick, OLQ_MS, color = factor(OLQ))) +
geom_line() +
facet_wrap(~sc, ncol = 2)
graphMS = fDiffQ %>%
group_by(sc, tick, OLQ, random_seed) %>%
summarise(tmpSum = mean(!!varD, na.rm = TRUE)) %>%
group_by(sc, tick, OLQ) %>%
summarise(OLQ_MS = mean(tmpSum, na.rm = TRUE)) %>%
ggplot(aes(tick, OLQ_MS, color = factor(OLQ))) +
geom_line() +
facet_wrap(~sc, ncol = 2)
graphMS = fDiffQ %>%
group_by(sc, tick, OLQ, random_seed) %>%
summarise(tmpSum = mean(!!varD, na.rm = TRUE))
graphMS = fDiffQ %>%
group_by(sc, tick, OLQ, random_seed) %>%
summarise(tmpSum = mean(!!varD, na.rm = TRUE))
graphMS = fDiffQ %>%
group_by(sc, tick, OLQ, random_seed) %>%
summarise(tmpSum = mean(!!varD))
quo(varD)
quo(summarise(tmpSum = mean(!!varD)))
quo(summarise(tmpSum = mean(varD)))
varD
varD = paste0(varToDraw, ".d")
varD
quo(varD)
quo(summarise(tmpSum = mean(!!varD)))
graphMS = fDiffQ %>%
group_by(sc, tick, OLQ, random_seed) %>%
summarise(tmpSum = mean(!!varD, na.rm = TRUE)) %>%
group_by(sc, tick, OLQ) %>%
summarise(OLQ_MS = mean(tmpSum, na.rm = TRUE)) %>%
ggplot(aes(tick, OLQ_MS, color = factor(OLQ))) +
geom_line() +
facet_wrap(~sc, ncol = 2)
warning()
plot(graphMS)
graphMS = fDiffQ %>%
group_by(sc, tick, OLQ, random_seed) %>%
summarise(tmpSum = mean(!!varD, na.rm = TRUE)) %>%
graphMS = fDiffQ %>%
group_by(sc, tick, OLQ, random_seed) %>%
summarise(tmpSum = mean(!!varD, na.rm = TRUE))
View(graphMS)
View(graphMS)
#Drawing
filteredData = fDiffQ %>%
filter(
recessionMagnitude==0.01,
OLQ == 1 | OLQ == 3
#         recessionStart == 25,
#         recessionDuration == 1,
#         tick > 20, tick < 31,
#         FirmNumID == 35,
#         random_seed == 1
)
#readFiles
path = "C:/Users/javie/git/businessCycles/businessCycles/output"
setwd(path)
fileID = "2019.abr..30.17_01_26"
#fileID = "2019.abr..25.18_14_16"
f <- read_csv(paste0("Firms.", fileID, ".csv"))
p <- read_csv(paste0("Firms.", fileID, ".batch_param_map.csv"))
relevantVars = names(f)[!(names(f) %in% c("run", "tick", "FirmNumID", "random_seed"))]
relevantParams = getRelevantParams(p)
fsc = f %>% addScenarios(p, relevantParams)
fDiff = fsc %>% addDifferences(relevantParams, relevantVars)
fDiffQ = fDiff %>% addQuantiles(3)
source('C:/Users/javie/git/businessCycles/businessCycles/exploreData/process.R')
relevantParams = getRelevantParams(p)
fsc = f %>% addScenarios(p, relevantParams)
fDiff = fsc %>% addDifferences(relevantParams, relevantVars)
fDiffQ = fDiff %>% addQuantiles(3)
#Drawing
filteredData = fDiffQ %>%
filter(
recessionMagnitude==0.01,
OLQ == 1 | OLQ == 3
#         recessionStart == 25,
#         recessionDuration == 1,
#         tick > 20, tick < 31,
#         FirmNumID == 35,
#         random_seed == 1
)
graphQ = filteredData %>%
group_by(sc, tick, OLQ, random_seed) %>%
summarise(tmpSum = mean(Quantity.d/Quantity.y, na.rm = TRUE)) %>%
group_by(sc, tick, OLQ) %>%
summarise(OLQ_Q = mean(tmpSum, na.rm = TRUE)) %>%
ggplot(aes(tick, OLQ_Q, color = factor(OLQ))) +
geom_line() +
facet_wrap(~sc, ncol = 2)
dev.new()
plot(graphQ)
graphMS = filteredData %>%
group_by(sc, tick, OLQ, random_seed) %>%
summarise(tmpSum = mean(MarketShare.d/MarketShare.y, na.rm = TRUE)) %>%
group_by(sc, tick, OLQ) %>%
summarise(OLQ_MS = mean(tmpSum, na.rm = TRUE)) %>%
ggplot(aes(tick, OLQ_MS, color = factor(OLQ))) +
geom_line() +
facet_wrap(~sc, ncol = 2)
dev.new()
plot(graphMS)
#Load functions
source('C:/Users/javie/git/businessCycles/businessCycles/exploreData/process.R')
#readFiles
path = "C:/Users/javie/git/businessCycles/businessCycles/output"
setwd(path)
fileID = "2019.abr..30.17_01_26"
#fileID = "2019.abr..25.18_14_16"
f <- read_csv(paste0("Firms.", fileID, ".csv"))
p <- read_csv(paste0("Firms.", fileID, ".batch_param_map.csv"))
relevantVars = names(f)[!(names(f) %in% c("run", "tick", "FirmNumID", "random_seed"))]
relevantParams = getRelevantParams(p)
fsc = f %>% addScenarios(p, relevantParams)
fDiff = fsc %>% addDifferences(relevantParams, relevantVars)
fDiffQ = fDiff %>% addQuantiles(3)
#Drawing
filteredData = fDiffQ %>%
filter(
recessionMagnitude==0.01,
OLQ == 1 | OLQ == 3
#         recessionStart == 25,
#         recessionDuration == 1,
#         tick > 20, tick < 31,
#         FirmNumID == 35,
#         random_seed == 1
)
graphQ = filteredData %>%
group_by(sc, tick, OLQ, random_seed) %>%
summarise(tmpSum = mean(Quantity.d/Quantity.y *100, na.rm = TRUE)) %>%
group_by(sc, tick, OLQ) %>%
summarise(OLQ_Q = mean(tmpSum, na.rm = TRUE)) %>%
ggplot(aes(tick, OLQ_Q, color = factor(OLQ))) +
geom_line() +
facet_wrap(~sc, ncol = 2)
dev.new()
plot(graphQ)
fDiffQ = fDiff %>% addQuantiles(4)
#Drawing
filteredData = fDiffQ %>%
filter(
recessionMagnitude==0.01,
OLQ == 1 | OLQ == 4
#         recessionStart == 25,
#         recessionDuration == 1,
#         tick > 20, tick < 31,
#         FirmNumID == 35,
#         random_seed == 1
)
dev.new()
plot(graphQ)
#Drawing
filteredData = fDiffQ %>%
filter(
recessionMagnitude==0.01,
OLQ == 1 | OLQ == 4
#         recessionStart == 25,
#         recessionDuration == 1,
#         tick > 20, tick < 31,
#         FirmNumID == 35,
#         random_seed == 1
)
graphQ = filteredData %>%
group_by(sc, tick, OLQ, random_seed) %>%
summarise(tmpSum = mean(Quantity.d/Quantity.y *100, na.rm = TRUE)) %>%
group_by(sc, tick, OLQ) %>%
summarise(OLQ_Q = mean(tmpSum, na.rm = TRUE)) %>%
ggplot(aes(tick, OLQ_Q, color = factor(OLQ))) +
geom_line() +
facet_wrap(~sc, ncol = 2)
dev.new()
plot(graphQ)
unique(p$recessionMagnitude )
#Drawing
filteredData = fDiffQ %>%
filter(
recessionMagnitude==0.1,
OLQ == 1 | OLQ == 4
#         recessionStart == 25,
#         recessionDuration == 1,
#         tick > 20, tick < 31,
#         FirmNumID == 35,
#         random_seed == 1
)
graphQ = filteredData %>%
group_by(sc, tick, OLQ, random_seed) %>%
summarise(tmpSum = mean(Quantity.d/Quantity.y *100, na.rm = TRUE)) %>%
group_by(sc, tick, OLQ) %>%
summarise(OLQ_Q = mean(tmpSum, na.rm = TRUE)) %>%
ggplot(aes(tick, OLQ_Q, color = factor(OLQ))) +
geom_line() +
facet_wrap(~sc, ncol = 2)
dev.new()
plot(graphQ)
names(f)
#Med Cost
graphMS = filteredData %>%
group_by(sc, tick, OLQ, random_seed) %>%
summarise(tmpSum = mean(MedCost.d/MedCost.y, na.rm = TRUE)) %>%
group_by(sc, tick, OLQ) %>%
summarise(OLQ_C = mean(tmpSum, na.rm = TRUE)) %>%
ggplot(aes(tick, OLQ_C, color = factor(OLQ))) +
geom_line() +
facet_wrap(~sc, ncol = 2)
dev.new()
plot(graphMS)
#Med Cost
graphMS = filteredData %>%
group_by(sc, tick, OLQ, random_seed) %>%
summarise(tmpSum = mean(MedCost.d/MedCost.y * 100, na.rm = TRUE)) %>%
group_by(sc, tick, OLQ) %>%
summarise(OLQ_C = mean(tmpSum, na.rm = TRUE)) %>%
ggplot(aes(tick, OLQ_C, color = factor(OLQ))) +
geom_line() +
facet_wrap(~sc, ncol = 2)
dev.new()
plot(graphMS)
fDiff %>% select(OperatingLeverage, OLQ)
fDiffQ %>% select(OperatingLeverage, OLQ)
filteredData %>%
plot_ly(x = ~tick, y = ~Quantity, name = 'SS', type = 'scatter', mode = 'lines') %>%
add_trace(y = ~Quantity.y, name = 'Base', mode = 'lines+markers')
library(plotly)
filteredData %>%
plot_ly(x = ~tick, y = ~Quantity, name = 'SS', type = 'scatter', mode = 'lines') %>%
add_trace(y = ~Quantity.y, name = 'Base', mode = 'lines+markers')
filteredData %>%
group_by(sc, tick, OLQ, random_seed) %>%
summarise(tmpSum = mean(Quantity.d/Quantity.y *100, na.rm = TRUE)) %>%
group_by(sc, tick, OLQ) %>%
summarise(OLQ_Q = mean(tmpSum, na.rm = TRUE)) %>%
plot_ly(x = ~tick, y = ~OLQ_Q, color = OLQ, type = 'scatter', mode = 'lines')
filteredData %>%
group_by(sc, tick, OLQ, random_seed) %>%
summarise(tmpSum = mean(Quantity.d/Quantity.y *100, na.rm = TRUE)) %>%
group_by(sc, tick, OLQ) %>%
summarise(OLQ_Q = mean(tmpSum, na.rm = TRUE)) %>%
plot_ly(x = ~tick, y = ~OLQ_Q, color = -OLQ, type = 'scatter', mode = 'lines')
filteredData %>%
group_by(sc, tick, OLQ, random_seed) %>%
summarise(tmpSum = mean(Quantity.d/Quantity.y *100, na.rm = TRUE)) %>%
group_by(sc, tick, OLQ) %>%
summarise(OLQ_Q = mean(tmpSum, na.rm = TRUE)) %>%
plot_ly(x = ~tick, y = ~OLQ_Q, color = ~OLQ, type = 'scatter', mode = 'lines')
filteredData %>%
group_by(sc, tick, OLQ, random_seed) %>%
summarise(tmpSum = mean(Quantity.d/Quantity.y *100, na.rm = TRUE)) %>%
group_by(sc, tick, OLQ) %>%
summarise(OLQ_Q = mean(tmpSum, na.rm = TRUE)) %>%
plot_ly(x = ~tick, y = ~OLQ_Q, color = factor(~OLQ), type = 'scatter', mode = 'lines')
filteredData %>%
group_by(sc, tick, OLQ, random_seed) %>%
summarise(tmpSum = mean(Quantity.d/Quantity.y *100, na.rm = TRUE)) %>%
group_by(sc, tick, OLQ) %>%
summarise(OLQ_Q = mean(tmpSum, na.rm = TRUE)) %>%
plot_ly(x = ~tick, y = ~OLQ_Q, color = factor(~OLQ), type = 'scatter', mode = 'lines')
filteredData %>%
group_by(sc, tick, OLQ, random_seed) %>%
summarise(tmpSum = mean(Quantity.d/Quantity.y *100, na.rm = TRUE)) %>%
group_by(sc, tick, OLQ) %>%
summarise(OLQ_Q = mean(tmpSum, na.rm = TRUE)) %>%
plot_ly(x = ~tick, y = ~OLQ_Q, color = ~factor(OLQ), type = 'scatter', mode = 'lines')
filteredData %>%
group_by(sc, tick, OLQ, random_seed) %>%
summarise(tmpSum = mean(Quantity.d/Quantity.y *100, na.rm = TRUE)) %>%
group_by(sc, tick, OLQ) %>%
summarise(OLQ_Q = mean(tmpSum, na.rm = TRUE)) %>%
plot_ly(x = ~tick, y = ~OLQ_Q, color = as.factor(OLQ), type = 'scatter', mode = 'lines')
filteredData %>%
group_by(sc, tick, OLQ, random_seed) %>%
summarise(tmpSum = mean(Quantity.d/Quantity.y *100, na.rm = TRUE)) %>%
group_by(sc, tick, OLQ) %>%
summarise(OLQ_Q = mean(tmpSum, na.rm = TRUE)) %>%
plot_ly(x = ~tick, y = ~OLQ_Q, color = as.factor(~OLQ), type = 'scatter', mode = 'lines')
filteredData %>%
group_by(sc, tick, OLQ, random_seed) %>%
summarise(tmpSum = mean(Quantity.d/Quantity.y *100, na.rm = TRUE)) %>%
group_by(sc, tick, OLQ) %>%
summarise(OLQ_Q = mean(tmpSum, na.rm = TRUE)) %>%
plot_ly(x = ~tick, y = ~OLQ_Q, color = ~OLQ, type = 'scatter', mode = 'lines')
filteredData %>%
group_by(sc, tick, OLQ, random_seed) %>%
summarise(tmpSum = mean(Quantity.d/Quantity.y *100, na.rm = TRUE)) %>%
group_by(sc, tick, OLQ) %>%
summarise(OLQ_Q = mean(tmpSum, na.rm = TRUE)) %>%
plot_ly(x = ~tick, y = ~OLQ_Q, color = ~OLQ, type = 'scatter')
filteredData %>%
group_by(sc, tick, OLQ, random_seed) %>%
summarise(tmpSum = mean(Quantity.d/Quantity.y *100, na.rm = TRUE)) %>%
group_by(sc, tick, OLQ) %>%
summarise(OLQ_Q = mean(tmpSum, na.rm = TRUE)) %>%
plot_ly(x = ~tick, y = ~OLQ_Q, color = ~OLQ, type = 'line')
filteredData %>%
group_by(sc, tick, OLQ, random_seed) %>%
summarise(tmpSum = mean(Quantity.d/Quantity.y *100, na.rm = TRUE)) %>%
group_by(sc, tick, OLQ) %>%
summarise(OLQ_Q = mean(tmpSum, na.rm = TRUE)) %>%
plot_ly(x = ~tick, y = ~OLQ_Q, color = ~OLQ, type = 'scatter')
filteredData %>%
group_by(sc, tick, OLQ, random_seed) %>%
summarise(tmpSum = mean(Quantity.d/Quantity.y *100, na.rm = TRUE)) %>%
group_by(sc, tick, OLQ) %>%
summarise(OLQ_Q = mean(tmpSum, na.rm = TRUE)) %>%
plot_ly(x = ~tick, y = ~OLQ_Q, color = ~OLQ, type = 'scatter', mode = 'line')
addQuantiles = function(df, n) {
q = df %>%
filter(Age == 0) %>%
group_by(run, tick) %>%
mutate(OLQ = factor(ntile(OperatingLeverage, n)),
QQ = factor(ntile(Quantity, n))) %>%
ungroup() %>%
select(run, FirmNumID, OLQ, QQ)
inner_join(df, q, c("run", "FirmNumID"))
}
type(fDiffQ)
typeof(fDiffQ)
typeof(fDiffQ$OLQ)
fDiffQ = fDiff %>% addQuantiles(4)
warnings()
q = fDiff %>%
filter(Age == 0) %>%
group_by(run, tick) %>%
mutate(OLQ = ntile(OperatingLeverage, n),
QQ = ntile(Quantity, n)) %>%
ungroup() %>%
select(run, FirmNumID, OLQ, QQ)
q = fDiff %>%
filter(Age == 0) %>%
group_by(run, tick) %>%
mutate(OLQ = ntile(OperatingLeverage, 3),
QQ = ntile(Quantity, 3)) %>%
ungroup() %>%
select(run, FirmNumID, OLQ, QQ)
View(q)
View(q)
q
q[,'OLQ']<-factor(q[,'OLQ'])
q$OLQ
q$OLQ = factor(q$OLQ)
typeof(q$OLQ)
class(q$OLQ)
class(q$QQ)
typeof(q$QQ)
q = fDiff %>%
filter(Age == 0) %>%
group_by(run, tick) %>%
mutate(OLQ = as.factor(ntile(OperatingLeverage, 3)),
QQ = as.factor(ntile(Quantity, 3))) %>%
ungroup() %>%
select(run, FirmNumID, OLQ, QQ)
warnings()
addQuantiles = function(df, n) {
q = df %>%
filter(Age == 0) %>%
group_by(run, tick) %>%
mutate(OLQ = ntile(OperatingLeverage, n),
QQ = ntile(Quantity, n)) %>%
ungroup() %>%
select(run, FirmNumID, OLQ, QQ)
q$OLQ = factor(q$OLQ)
q$QQ = factor(q$QQ)
inner_join(df, q, c("run", "FirmNumID"))
}
fDiffQ = fDiff %>% addQuantiles(4)
fDiffQ$OLQ
#Drawing
#filtering
filteredData = fDiffQ %>%
filter(
recessionMagnitude==0.1,
OLQ == 1 | OLQ == 4
#         recessionStart == 25,
#         recessionDuration == 1,
#         tick > 20, tick < 31,
#         FirmNumID == 35,
#         random_seed == 1
)
filteredData %>%
group_by(sc, tick, OLQ, random_seed) %>%
summarise(tmpSum = mean(Quantity.d/Quantity.y *100, na.rm = TRUE)) %>%
group_by(sc, tick, OLQ) %>%
summarise(OLQ_Q = mean(tmpSum, na.rm = TRUE)) %>%
plot_ly(x = ~tick, y = ~OLQ_Q, color = ~OLQ, type = 'scatter', mode = 'line')
#Load functions
source('C:/Users/javie/git/businessCycles/businessCycles/exploreData/process.R')
#readFiles
path = "C:/Users/javie/git/businessCycles/businessCycles/output"
setwd(path)
fileID = "2019.abr..30.17_01_26"
#fileID = "2019.abr..25.18_14_16"
f <- read_csv(paste0("Firms.", fileID, ".csv"))
p <- read_csv(paste0("Firms.", fileID, ".batch_param_map.csv"))
relevantVars = names(f)[!(names(f) %in% c("run", "tick", "FirmNumID", "random_seed"))]
relevantParams = getRelevantParams(p)
fsc = f %>% addScenarios(p, relevantParams)
fsc$sc
fsc
addScenarios = function(f, p, relevantParams) {
tmp = inner_join(f, select(p, "run", relevantParams), by="run") %>%
mutate(sc = ifelse(recessionMagnitude == 0,
"Base",
paste0("S:", recessionStart,
" M:", recessionMagnitude,
" D:", recessionDuration)))
tmp$sc = factor(tmp$sc)
return(tmp)
}
fsc = f %>% addScenarios(p, relevantParams)
fsc$sc
fDiff = fsc %>% addDifferences(relevantParams, relevantVars)
fDiffQ = fDiff %>% addQuantiles(4)
#Drawing
#filtering
filteredData = fDiffQ %>%
filter(
recessionMagnitude==0.1,
OLQ == 1 | OLQ == 4
#         recessionStart == 25,
#         recessionDuration == 1,
#         tick > 20, tick < 31,
#         FirmNumID == 35,
#         random_seed == 1
)
filteredData %>%
group_by(sc, tick, OLQ, random_seed) %>%
summarise(tmpSum = mean(Quantity.d/Quantity.y *100, na.rm = TRUE)) %>%
group_by(sc, tick, OLQ) %>%
summarise(OLQ_Q = mean(tmpSum, na.rm = TRUE)) %>%
plot_ly(x = ~tick, y = ~OLQ_Q, color = ~OLQ, type = 'scatter', mode = 'line') %>%
subplot(nrows = 6)
filteredData %>%
group_by(sc, tick, OLQ, random_seed) %>%
summarise(tmpSum = mean(Quantity.d/Quantity.y *100, na.rm = TRUE)) %>%
group_by(sc, tick, OLQ) %>%
summarise(OLQ_Q = mean(tmpSum, na.rm = TRUE)) %>%
plot_ly(x = ~tick, y = ~OLQ_Q, color = ~OLQ, type = 'scatter', mode = 'line') %>%
add_lines() %>%
subplot(nrows = 3)
economics
head(economics)
tmp <- economics %>%
tidyr::gather(variable, value, -date) %>%
transform(id = as.integer(factor(variable)))
View(tmp)
gather(fDiff, varName, varValue, c(sc, tick, FirmNumID, OLQ, QQ))
gather(fDiffQ, varName, varValue, c(sc, tick, FirmNumID, OLQ, QQ))
tmp = gather(fDiff, varName, varValue, c(sc, tick, FirmNumID, OLQ, QQ))
tmp = gather(fDiffQ, varName, varValue, c(sc, tick, FirmNumID, OLQ, QQ))
#Drawing
#filtering
filteredData = fDiffQ %>%
filter(
recessionMagnitude==0.1,
OLQ == 1 | OLQ == 4
#         recessionStart == 25,
#         recessionDuration == 1,
#         tick > 20, tick < 31,
#         FirmNumID == 35,
#         random_seed == 1
)
